// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Parking.Api.Models;

namespace Parking.Api.Migrations
{
    [DbContext(typeof(ParkingContext))]
    partial class ParkingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parking.Api.Models.Command", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Data");

                    b.Property<string>("Type");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("CommandStore");
                });

            modelBuilder.Entity("Parking.Api.Models.Parking", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsOpened");

                    b.HasKey("Name");

                    b.ToTable("Parking");
                });

            modelBuilder.Entity("Parking.Api.Models.ParkingPlace", b =>
                {
                    b.Property<string>("ParkingName");

                    b.Property<int>("Number");

                    b.Property<bool>("IsFree");

                    b.Property<string>("UserId");

                    b.HasKey("ParkingName", "Number");

                    b.ToTable("ParkingPlaces");
                });

            modelBuilder.Entity("Parking.Api.Models.ParkingPlace", b =>
                {
                    b.HasOne("Parking.Api.Models.Parking", "Parking")
                        .WithMany("Places")
                        .HasForeignKey("ParkingName")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
